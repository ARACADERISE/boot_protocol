LB='\033[1;36m'
NC='\033[0m'

# Print the help information right away
if [ "$#" -ge 1 ];
then
    if [ $1 == "--h" ] || [ $1 == "--help" ];
    then
        echo -e "FAMP_fdi(FAMP Format Disk Image tool).\n\t- Run: $LB FAMP_fdi [disk_image_output] [type_of_filesystem] [size_of_filesystem] [programs_to_store_on_fs] $NC\n\t- Example: FAMP_fdi test_disk_image.bin FAMP_CFS 2G\n\t\twhere $LB\`FAMP_CFS\`$NC stands for FAMP Custom FileSystem and $LB\`2G\`$NC means 2GB disk image.\n"
        echo -e "\t  * A disk image is referred to as a binary image that represents a filesystem for FAMP. It also refers to a binary image of which the tool $LB\`FAMP_fdi\`$NC was used to format.\n"
        echo -e "\t  -$LB \`disk_image)output\`$NC will be the file binary output where the disk image will be saved to. This file will then be specified in \`boot.yaml\` where FAMP can concat"
        echo -e "\t    the disk image to the rest of the operating systems image."
        echo -e "\t  -$LB \`type_of_filesystem\`$NC will be the type of file system the disk image represents. This too will have to be set in \`boot.yaml\` so FAMP knows what data to look for"
        echo -e "\t    in the disk image partition header(the first 60 or so bytes of the disk image will be where the partition header dwells)."
        echo -e "\t  -$LB \`size_of_filesystem\`$NC will be the estimate size of the disk image. This is just a \"want\". The size is, and will most likely, be prone to change."
        echo -e "\t    FAMP_fdi takes in the users requested size and will perform actions accordingly. FAMP can also expand the size, if needed, after the image has been read into memory"
        echo -e "\t  -$LB \`programs_to_store_on_fs\`$NC is any sort of program you want the disk image to store when it gets read/loaded into memory by the protocol.\n"
        exit 0
    fi
fi

DIR=$PWD/
cd /usr/lib/FAMP_tools_bin
./format_disk_image.o $DIR $1 $2 $3